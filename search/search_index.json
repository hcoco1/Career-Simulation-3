{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>In this career simulation, you will use your newfound knowledge of vulnerability assessment and risk management to work through a problem. Using techniques learned in this bootcamp, you will examine and explain which tools and techniques to use for the best possible outcomes. Additionally, you will write a penetration testing report for your client that documents your findings.</p>"},{"location":"#learning-objectives","title":"Learning Objectives","text":"<p>Your deliverable for this career simulation should demonstrate an understanding of the following learning objectives. These objectives will be used for grading.</p>"},{"location":"#vulnerabilities-assessment","title":"Vulnerabilities Assessment","text":"<ul> <li>Exhibit ethical hacking protocols to evaluate the security of and identify vulnerabilities in target systems, networks, or system infrastructure.</li> <li>Perform vulnerability scanning using a variety of tools.</li> <li>Use and configure tools to perform offensive security techniques.</li> <li>Use modules within Metasploit and explain their purpose.</li> <li>Establish Meterpreter sessions and explain how to use them.</li> <li>Search for privilege escalation opportunities through lateral movement.</li> <li>Apply the pass-the-hash technique to take advantage of flaws in NTLM authentication.</li> </ul>"},{"location":"#interpersonal-skills","title":"Interpersonal Skills","text":"<ul> <li>Develop constructive and cooperative working relationships.</li> <li>Identify problems using a group approach and develop solutions based on group consensus.</li> <li>Apply active listening skills by using reflection, restatement, questioning, and clarification.</li> <li>Convey information clearly, correctly, and succinctly.</li> <li>Respond appropriately to positive and constructive feedback.</li> <li>Reach agreements that promote mutual goals and interests.</li> </ul>"},{"location":"#problem-solving","title":"Problem Solving","text":"<ul> <li>Observe and evaluate the outcomes of implementing solutions to assess the need for alternative approaches and to identify lessons learned.</li> <li>Recall previously learned information that is relevant to the problem.</li> <li>Use a security mindset to identify assets and security goals, potential adversaries and threats, and potential weaknesses.</li> <li>Have sufficient inductive and deductive reasoning abilities to do the job successfully.</li> <li>Use man pages to learn about unfamiliar commands or switches.</li> <li>Search for online information and interact with websites and web applications.</li> <li>Critically review, analyze, synthesize, compare, and interpret information.</li> </ul>"},{"location":"#writing","title":"Writing","text":"<ul> <li>Communicate thoughts, ideas, and information, which might include technical material, in a logical, organized, and coherent manner.</li> <li>Tailor the content to the appropriate audience and purpose.</li> <li>Analyze penetration reports and explain their purpose.</li> </ul>"},{"location":"2-instructions/","title":"The Penetration Testing","text":""},{"location":"2-instructions/#scenario","title":"Scenario","text":"<p>Fullstack Academy has reviewed your team\u2019s report and is satisfied with the results. Because your team did such a great job, they would like a follow-up penetration test with an isolated portion of the network that was not part of the original engagement. However, this isolated portion of the network has a small number of systems, so it does not make sense for your entire team to be involved with this follow-up engagement. Instead, your team has assigned you to complete the penetration test for this isolated network on your own, as you have proven yourself ready to handle this kind of engagement.</p>"},{"location":"2-instructions/#rules-of-engagement","title":"Rules of Engagement","text":"<ul> <li>You are authorized only to scan and attack systems that reside on the same /20 subnet on which your Kali instance resides (e.g., if the IP of your Kali instance is 172.31.6.161, you are only authorized to scan and attack systems on the 172.31.6.0/20 subnet).</li> <li>No social engineering or client-side exploits are needed or permitted on this penetration test.</li> <li>You are allowed to work with your classmates on this penetration test.</li> <li>Everything you need to complete this test should be available to you on the systems already; there should be no need to download outside tools for this penetration test.</li> </ul>"},{"location":"challenge_1/","title":"Challenge 1: Network Scanning","text":""},{"location":"challenge_1/#procedure","title":"Procedure:","text":"<p>The first step is always reconnaissance. We need to identify all of the relevant targets in our network and find out what they're running.</p> <ul> <li>Use Nmap to run a basic scan on the subnet your Kali machine is connected to. You should find four hosts in your results, not including your own Kali machine.</li> <li>Hint: Where can you find the subnet range of your Kali VM?</li> <li>Reminder: Running Nmap with root privileges might give you a lot more results than intended, showing hosts that are online but with no open ports. Re-run the scan as a normal user (without sudo) or ignore the results with no ports open.</li> <li>Next, run service and version detection scans on the specific IP addresses found in your first scan. Scan for services beginning at port 1 and ending at port 5000.</li> <li>Hint: How do you perform a service and version scan in Nmap?</li> <li>Hint: How do you specify a range of ports to scan in Nmap?</li> <li>Reminder: You can scan all four IP addresses in a single command, or scan them each individually. Remember that the more you do in one scan, the longer it will take.</li> </ul> <p>Interpret your results and determine the following:</p> <ul> <li> <p>Which host is running a web server on a non-standard port? What port is it running on?</p> </li> <li> <p>Which host is running an SSH server on a non-standard port? What port is it running on?</p> </li> <li> <p>Which machines are running Windows-based operating systems?</p> </li> </ul>"},{"location":"challenge_1/#solution","title":"Solution:","text":"<ul> <li>Run a basic scan to check the subnet:</li> </ul> <pre><code>\u250c\u2500\u2500(kali\u327fkali)-[~]\n\u2514\u2500$ ip addr\n1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host \n       valid_lft forever preferred_lft forever\n2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 9001 qdisc mq state UP group default qlen 1000\n    link/ether 02:6c:7f:8f:39:11 brd ff:ff:ff:ff:ff:ff\n    inet 172.31.39.126/20 brd 172.31.47.255 scope global dynamic eth0\n       valid_lft 3164sec preferred_lft 3164sec\n    inet6 fe80::6c:7fff:fe8f:3911/64 scope link \n       valid_lft forever preferred_lft forever\n</code></pre> <p>Based on the output  provided from  <code>ip addr</code> command, we can see that the Kali Linux machine is configured with the IP address <code>172.31.39.126</code> on the <code>eth0</code> interface, and it's within the <code>/20</code> subnet. This means the address range you can scan is from <code>172.31.32.0</code> to <code>172.31.47.255</code>.   The <code>eth0</code> interface is configured with an IP in the <code>172.31.32.0/20</code> subnet, indicating it can communicate with any devices whose IP addresses fall within this range. The subnet setup allows your machine to interact with potentially 4094 hosts (from <code>172.31.32.1</code> to <code>172.31.47.254</code>, excluding the network and broadcast addresses).</p> <ul> <li>Identify which hosts are up in the <code>172.31.32.0/20</code> subnet, you can start with a ping sweep using Nmap. This is a non-intrusive way to discover active hosts.</li> </ul> <pre><code>\u250c\u2500\u2500(kali\u327fkali)-[~]\n\u2514\u2500$ nmap -sn 172.31.32.0/20\nStarting Nmap 7.93 ( https://nmap.org ) at 2024-05-07 23:59 UTC\nNmap scan report for ip-172-31-39-126.us-west-2.compute.internal (172.31.39.126)\nHost is up (0.00036s latency).\nNmap scan report for ip-172-31-40-22.us-west-2.compute.internal (172.31.40.22)\nHost is up (0.0057s latency).\nNmap scan report for ip-172-31-43-103.us-west-2.compute.internal (172.31.43.103)\nHost is up (0.00076s latency).\nNmap scan report for ip-172-31-44-198.us-west-2.compute.internal (172.31.44.198)\nHost is up (0.0055s latency).\nNmap scan report for ip-172-31-45-94.us-west-2.compute.internal (172.31.45.94)\nHost is up (0.0013s latency).\nNmap done: 4096 IP addresses (5 hosts up) scanned in 63.81 seconds\n</code></pre> <p>Now that you have identified the active hosts, you can perform more in-depth scans on each of these IP addresses. The goal here is to discover which services are running on each host and to identify any potential vulnerabilities associated with these services. For each host, you might run the following Nmap command, which scans for service versions on commonly used ports:</p> <ul> <li>Next, run service and version detection scans on the specific IP addresses found in your first scan.\u00a0Scan for services beginning at port 1 and ending at port 5000.</li> </ul> <pre><code>\u250c\u2500\u2500(kali\u327fkali)-[~]\n\u2514\u2500$ \nnmap -sV -p1-5000 172.31.40.22\nnmap -sV -p1-5000 172.31.43.103\nnmap -sV -p1-5000 172.31.44.198\nnmap -sV -p1-5000 172.31.45.94\n\nStarting Nmap 7.93 ( https://nmap.org ) at 2024-05-08 00:05 UTC\nNmap scan report for ip-172-31-40-22.us-west-2.compute.internal (172.31.40.22)\nHost is up (0.0016s latency).\nNot shown: 4998 closed tcp ports (conn-refused)\nPORT     STATE SERVICE VERSION\n22/tcp   open  ssh     OpenSSH 8.9p1 Ubuntu 3 (Ubuntu Linux; protocol 2.0)\n1013/tcp open  http    Apache httpd 2.4.52 ((Ubuntu))\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 12.88 seconds\nStarting Nmap 7.93 ( https://nmap.org ) at 2024-05-08 00:05 UTC\nNmap scan report for ip-172-31-43-103.us-west-2.compute.internal (172.31.43.103)\nHost is up (0.00016s latency).\nNot shown: 4996 closed tcp ports (conn-refused)\nPORT     STATE SERVICE       VERSION\n135/tcp  open  msrpc         Microsoft Windows RPC\n139/tcp  open  netbios-ssn   Microsoft Windows netbios-ssn\n445/tcp  open  microsoft-ds  Microsoft Windows Server 2008 R2 - 2012 microsoft-ds\n3389/tcp open  ms-wbt-server Microsoft Terminal Services\nService Info: OSs: Windows, Windows Server 2008 R2 - 2012; CPE: cpe:/o:microsoft:windows\n\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 15.58 seconds\nStarting Nmap 7.93 ( https://nmap.org ) at 2024-05-08 00:05 UTC\nNmap scan report for ip-172-31-44-198.us-west-2.compute.internal (172.31.44.198)\nHost is up (0.0041s latency).\nNot shown: 4999 closed tcp ports (conn-refused)\nPORT     STATE SERVICE VERSION\n2222/tcp open  ssh     OpenSSH 8.9p1 Ubuntu 3ubuntu0.6 (Ubuntu Linux; protocol 2.0)\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 0.87 seconds\nStarting Nmap 7.93 ( https://nmap.org ) at 2024-05-08 00:05 UTC\nNmap scan report for ip-172-31-45-94.us-west-2.compute.internal (172.31.45.94)\nHost is up (0.00017s latency).\nNot shown: 4996 closed tcp ports (conn-refused)\nPORT     STATE SERVICE       VERSION\n135/tcp  open  msrpc         Microsoft Windows RPC\n139/tcp  open  netbios-ssn   Microsoft Windows netbios-ssn\n445/tcp  open  microsoft-ds  Microsoft Windows Server 2008 R2 - 2012 microsoft-ds\n3389/tcp open  ms-wbt-server Microsoft Terminal Services\nService Info: OSs: Windows, Windows Server 2008 R2 - 2012; CPE: cpe:/o:microsoft:windows\n\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 16.78 seconds\n</code></pre> <p>Which host is running a web server on a non-standard port? What port is it running on?\u00a0</p> <p>Host at 172.31.40.22 HTTP (1013/tcp): Running Apache httpd 2.4.52 on Ubuntu. While this is a modern version, Apache servers can be vulnerable to misconfigurations, outdated modules, or specific flaws depending on the site setup.</p> <p>Which host is running an SSH server on a non-standard port? What port is it running on?</p> <p>Host at 172.31.40.22 SSH (22/tcp): Running OpenSSH 8.9p1 on Ubuntu. This version is relatively up-to-date, so vulnerabilities are likely minimal. However, ensure that only strong, secure authentication methods (e.g., key-based authentication) are enabled.</p> <p>Which machines are running Windows-based operating systems?</p> <p>Host at 172.31.43.103 and 172.31.45.94 Microsoft Windows RPC (135/tcp) NetBIOS Session Service (139/tcp) Microsoft DS (445/tcp): These services are indicative of a Windows environment and are typical in Windows networking but can be vectors for attacks like SMB Relay, Pass the Hash, etc. Microsoft Terminal Services (3389/tcp): Remote desktop protocol service is running, which could be vulnerable to brute force attacks or exploits depending on the RDP configuration and patch level.</p>"},{"location":"challenge_2/","title":"Challenge 2: Initial Compromise","text":""},{"location":"challenge_2/#procedure","title":"Procedure:","text":"<p>Next, we need to find our initial compromise vector. Servers hosting openly accessible services, like websites and unsecured databases, are great places to start.</p> <ul> <li>Access the site hosted on the webserver you found in the previous step.</li> <li>Hint: How do you access a website on a custom port number?</li> <li>Explore the web pages available to you. What would be a good place to attempt some attacks?</li> <li>Hint: Your first goal should be to test anything that handles user input.</li> <li>Demonstrate you can run commands on the target system by running the <code>whoami</code> command.</li> </ul>"},{"location":"challenge_2/#solution","title":"Solution:","text":"<ul> <li>Access the site hosted on the webserver you found in the previous step.</li> </ul> <pre><code>\u250c\u2500\u2500(kali\u327fkali)-[~]\n\u2514\u2500$ firefox 172.31.40.22:1013\n</code></pre> <ul> <li>Accesing the Apache server.</li> </ul> <ul> <li>The input allow to perform a SQL injection Attack</li> </ul>"},{"location":"challenge_3/","title":"Challenge 3: Pivoting","text":""},{"location":"challenge_3/#procedure","title":"Procedure:","text":""},{"location":"challenge_4/","title":"Challenge 4: System Reconnaissance","text":""},{"location":"challenge_4/#procedure","title":"Procedure:","text":""},{"location":"challenge_5/","title":"Challenge 5: Metasploit","text":""},{"location":"challenge_5/#procedure","title":"Procedure:","text":""},{"location":"challenge_6/","title":"Challenge 6: Passing the Hash","text":""},{"location":"challenge_6/#procedure","title":"Procedure:","text":"<pre><code>with open('problem2.txt', 'r') as file:\n    count = 0\n    for line in file:\n        if line.strip() == '192.168.1.1':\n            count += 1\nprint(f\"The IP 192.168.1.1 appears {count} times.\")\n# The IP 192.168.1.1 appears 5 times.\n</code></pre> <pre><code>with open('problem2.txt', 'r') as file:\n    count = 0\n    for line in file:\n        if line.strip() == '192.168.1.1':\n            count += 1\nprint(f\"The IP 192.168.1.1 appears {count} times.\")\n# The IP 192.168.1.1 appears 5 times.\n</code></pre>"},{"location":"challenge_7/","title":"Challenge 7: Finding Sensitive Files","text":""},{"location":"challenge_7/#procedure","title":"Procedure:","text":""},{"location":"report/","title":"Report","text":""},{"location":"report/#procedure","title":"Procedure:","text":""}]}