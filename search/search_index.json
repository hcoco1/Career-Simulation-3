{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"The Penetration Testing","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#scenario","title":"Scenario","text":"<p>Fullstack Academy has reviewed your team\u2019s report and is satisfied with the results. Because your team did such a great job, they would like a follow-up penetration test with an isolated portion of the network that was not part of the original engagement. However, this isolated portion of the network has a small number of systems, so it does not make sense for your entire team to be involved with this follow-up engagement. Instead, your team has assigned you to complete the penetration test for this isolated network on your own, as you have proven yourself ready to handle this kind of engagement.</p>"},{"location":"#rules-of-engagement","title":"Rules of Engagement","text":"<ul> <li>You are authorized only to scan and attack systems that reside on the same /20 subnet on which your Kali instance resides (e.g., if the IP of your Kali instance is 172.31.6.161, you are only authorized to scan and attack systems on the 172.31.6.0/20 subnet).</li> <li>No social engineering or client-side exploits are needed or permitted on this penetration test.</li> <li>You are allowed to work with your classmates on this penetration test.</li> <li>Everything you need to complete this test should be available to you on the systems already; there should be no need to download outside tools for this penetration test.</li> </ul>"},{"location":"2-instructions/","title":"Instructions","text":""},{"location":"2-instructions/#challenge-1-network-scanning","title":"Challenge 1: Network Scanning","text":"<p>The first step is always reconnaissance. We need to identify all of the relevant targets in our network and find out what they're running.</p> <ul> <li>Use Nmap to run a basic scan on the subnet your Kali machine is connected to. You should find four hosts in your results, not including your own Kali machine.</li> <li>Hint: Where can you find the subnet range of your Kali VM?</li> <li>Reminder: Running Nmap with root privileges might give you a lot more results than intended, showing hosts that are online but with no open ports. Re-run the scan as a normal user (without sudo) or ignore the results with no ports open.</li> <li>Next, run service and version detection scans on the specific IP addresses found in your first scan. Scan for services beginning at port 1 and ending at port 5000.</li> <li>Hint: How do you perform a service and version scan in Nmap?</li> <li>Hint: How do you specify a range of ports to scan in Nmap?</li> <li>Reminder: You can scan all four IP addresses in a single command, or scan them each individually. Remember that the more you do in one scan, the longer it will take.</li> </ul> <p>Interpret your results and determine the following: - Which host is running a web server on a non-standard port? What port is it running on? - Which host is running an SSH server on a non-standard port? What port is it running on? - Which machines are running Windows-based operating systems?</p>"},{"location":"2-instructions/#challenge-2-initial-compromise","title":"Challenge 2: Initial Compromise","text":"<p>Next, we need to find our initial compromise vector. Servers hosting openly accessible services, like websites and unsecured databases, are great places to start.</p> <ul> <li>Access the site hosted on the webserver you found in the previous step.</li> <li>Hint: How do you access a website on a custom port number?</li> <li>Explore the web pages available to you. What would be a good place to attempt some attacks?</li> <li>Hint: Your first goal should be to test anything that handles user input.</li> <li>Demonstrate you can run commands on the target system by running the <code>whoami</code> command.</li> </ul>"},{"location":"2-instructions/#challenge-3-pivoting","title":"Challenge 3: Pivoting","text":"<p>Now that you can run commands on the web server, we want to find a way to pivot into the other Linux machine on the network.</p> <ul> <li>Search the webserver for SSH keys you can copy.</li> <li>Hint: Where do each users' SSH keys tend to live?</li> <li>Once you've found a key to test, copy it to your Kali machine.</li> <li>Note: There are some tricky ways to copy the file directly, but this is a great place to keep it simple. Copy and paste the contents of the key from one window to another.</li> <li>Use the key to connect from your Kali machine to the other Linux server you found earlier, using the non-standard port number revealed in your scans.</li> <li>Hint: How do you use a specific key file with SSH? How do you define a custom port to connect to?</li> <li>Hint: You will need to know which username to try and connect with. Which user did the stolen key originally belong to?</li> <li>Note: Some SSH clients will refuse to use a key with file permissions that are too open. You will need to ensure ONLY the key file owner has read, write, or execute permissions.</li> </ul>"},{"location":"2-instructions/#challenge-4-system-reconnaissance","title":"Challenge 4: System Reconnaissance","text":"<p>With SSH access to the second Linux machine, our new goal is to find our way into the remaining Windows hosts.</p> <ul> <li>Inexperienced or negligent developers and administrators frequently keep bad password management practices. Search for text files and scripts that might contain sensitive data, like passwords, keys, or hashes.</li> <li>Hint: With user-level access, it is a good idea to start by looking into that user's own files before expanding outward.</li> <li>Find the hash that appears to be associated with an Administrator account on a Windows machine.</li> </ul>"},{"location":"2-instructions/#challenge-5-password-cracking","title":"Challenge 5: Password Cracking","text":"<p>With a password hash in our hands, we need to crack it to discover the actual password.</p> <ul> <li>With any means you prefer, crack the MD5 hash you found to reveal the original password.</li> <li>You can crack the hash using existing tools installed in Kali. (Remember the available wordlists in <code>/usr/share/wordlists/</code>)</li> <li>You could write a Python script to crack it using the same wordlists as other tools.</li> <li>You can check third-party hash databases to see if it is a known hash.</li> </ul>"},{"location":"2-instructions/#challenge-6-metasploit","title":"Challenge 6: Metasploit","text":"<p>Now that we have a username and password, we need to use them to gain access to one of the Windows targets. Connecting using \"legitimate\" means like Remote Desktop Protocol (RDP) could be possible, but a Meterpreter shell can give us more user-friendly options to achieve our goals.</p> <ul> <li>Start up the Metasploit framework on Kali, and load the <code>windows/smb/psexec</code> exploit module.</li> <li>Note: This module is a common exploit for gaining access to Windows machines with stolen credentials.</li> <li>Configure the module's options to set the username and password you found previously. You will not need to specify a domain.</li> <li>Set the <code>RHOSTS</code> target to one of the Windows IPs you found with Nmap earlier.</li> <li>Note: These credentials will only work on one of the two Windows machines. If the exploit fails, set the other IP address as the target and try again.</li> <li>Set the payload to <code>windows/x64/meterpreter/reverse_tcp</code> and confirm its options automatically configure properly.</li> <li>Run the exploit. If everything works, you will be dropped into a Meterpreter shell on the target system. If not, test it against the other Windows target. If neither exploit works, double-check your options (check for typos in IP addresses, usernames, passwords, etc.)</li> </ul>"},{"location":"2-instructions/#challenge-7-passing-the-hash","title":"Challenge 7: Passing the Hash","text":"<p>With one Windows machine down and one left to go, we can try a Pass The Hash attack.</p> <ul> <li>From your established Meterpreter session, perform a hash dump and save the results.</li> <li>Exit (or background) your Meterpreter session to get back into the main Metasploit console.</li> <li>Using the same exploit and payload modules, set your <code>RHOSTS</code> target to the remaining Windows server IP.</li> <li>Test each username and hash combination you found on the first Windows server until you gain a Meterpreter on the final server.</li> </ul>"},{"location":"2-instructions/#challenge-8-finding-sensitive-files","title":"Challenge 8: Finding Sensitive Files","text":"<p>With access gained on the final target server, the last step is to grab the flag and claim victory.</p> <ul> <li>Using your Meterpreter shell, search the target server for a file named <code>secrets.txt</code>.</li> <li>Read the contents of the file, and include them in your report.</li> <li>Note: If you have found the filepath but get errors trying to open the file, it is likely a syntax issue. Using Windows-style filepaths in a Linux command line can be difficult, since Windows uses backslashes instead of forward slashes in paths, which your command line will interpret as an escape sequence instead of a literal backslash.  There are two good workarounds for this:<ul> <li>Put quotes around the filepath in your command, like <code>\"C:\\\\Windows\\\\system32\\\\file.txt\"</code></li> <li>Alternatively, you can use double slashes in place of the forward slashes: <code>C:\\\\\\\\Windows\\\\\\\\system32\\\\\\\\file.txt</code></li> </ul> </li> </ul>"},{"location":"2-instructions/#report","title":"Report","text":"<p>Your manager, Jamar, would like you to write a report that will be shared with Fullstack Academy describing:</p> <ul> <li>Objective of the penetration test</li> <li>Tools used</li> <li>Findings (including what is contained within the <code>secrets.txt</code> file).</li> </ul> <p>Refer to the previous lesson for an example of penetration testing reports. Use the Penetration Testing Report template as a guide for writing your report.</p>"},{"location":"challenge_1/","title":"Challenge 1: Network Scanning","text":""},{"location":"challenge_1/#runbook","title":"Runbook","text":"<p>The first step is always reconnaissance. We need to identify all of the relevant targets in our network and find out what they're running.</p> <ul> <li>Use Nmap to run a basic scan on the subnet your Kali machine is connected to. You should find four hosts in your results, not including your own Kali machine.</li> <li>Hint: Where can you find the subnet range of your Kali VM?</li> <li>Reminder: Running Nmap with root privileges might give you a lot more results than intended, showing hosts that are online but with no open ports. Re-run the scan as a normal user (without sudo) or ignore the results with no ports open.</li> <li>Next, run service and version detection scans on the specific IP addresses found in your first scan. Scan for services beginning at port 1 and ending at port 5000.</li> <li>Hint: How do you perform a service and version scan in Nmap?</li> <li>Hint: How do you specify a range of ports to scan in Nmap?</li> <li>Reminder: You can scan all four IP addresses in a single command, or scan them each individually. Remember that the more you do in one scan, the longer it will take.</li> </ul> <p>Interpret your results and determine the following: - Which host is running a web server on a non-standard port? What port is it running on? - Which host is running an SSH server on a non-standard port? What port is it running on? - Which machines are running Windows-based operating systems?</p>"},{"location":"challenge_2/","title":"Challenge 2: Network Scanning","text":""},{"location":"challenge_3/","title":"Challenge 3: Pivoting","text":""},{"location":"challenge_4/","title":"Challenge 4: System Reconnaissance","text":""},{"location":"challenge_5/","title":"Challenge 5: Metasploit","text":""},{"location":"challenge_6/","title":"Challenge 6: Passing the Hash","text":"<pre><code>with open('problem2.txt', 'r') as file:\n    count = 0\n    for line in file:\n        if line.strip() == '192.168.1.1':\n            count += 1\nprint(f\"The IP 192.168.1.1 appears {count} times.\")\n# The IP 192.168.1.1 appears 5 times.\n</code></pre>"},{"location":"challenge_7/","title":"Challenge 7: Finding Sensitive Files","text":""},{"location":"report/","title":"Report","text":""}]}